rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection
    match /users/{userId} {
      // Allow creation only if the authenticated user is creating their own document.
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Allow read if the authenticated user is reading their own document
      // or if the user has the 'owner' role.
      allow read: if request.auth != null &&
        (request.auth.uid == userId || isOwner(request.auth.uid));
      
      // Allow update and delete if the authenticated user is the owner of the document
      // or has the 'owner' role.
      allow update, delete: if request.auth != null &&
        (request.auth.uid == userId || isOwner(request.auth.uid));
    }
    
    // Transactions collection
    match /transactions/{transactionId} {
      // Allow document creation if the transaction is created for the authenticated user.
      allow create: if request.auth != null &&
        request.resource.data.userId == request.auth.uid;
      
      // Allow read, update, delete if the transaction belongs to the user
      // or if the user is an owner.
      allow read, update, delete: if request.auth != null &&
        (resource.data.userId == request.auth.uid || isOwner(request.auth.uid));
    }
    
    // Helper function to check if the authenticated user is an owner.
    function isOwner(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role == 'owner';
    }
  }
}